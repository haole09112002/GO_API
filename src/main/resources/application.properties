firebase.config.path=serviceAccountKey.json
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false

#cloudinary.api.key=222578853965532
#cloudinary.api.name=dxcy99sc1
#cloudinary.api.secret=xQlUq7QOPKBDdEsYz0sMWYt2-8o

vietmap.api.key=c34db45b6d1e8e71bfe74bd5139aa592322b463632af3543

  # spring.datasource.url = jdbc:mysql://localhost:3307/GOBooking?useSSL=false&createDatabaseIfNotExist=true
  # spring.datasource.username = root
  # spring.datasource.password = kucao101
#  
#  spring.datasource.url=jdbc:mysql://localhost:3306/GO_HAOLV_Booking?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
#  spring.datasource.username=root
#  spring.datasource.password=

#  spring.datasource.url=jdbc:mysql://b3qcb5o56gbjhsaguyh6-mysql.services.clever-cloud.com:3306/b3qcb5o56gbjhsaguyh6?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
#  spring.datasource.username=uwiutcxqqvwd6npw
#  spring.datasource.password=ZOpWtamSQ5VZifsAQYPt

# spring.datasource.url=jdbc:mysql://monorail.proxy.rlwy.net:32767/railway?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
# spring.datasource.username=root
# spring.datasource.password=cgA-a4G55Ed1H41-cd1bGA5ec2G3b-AA
#
#spring.datasource.url=jdbc:mysql://monorail.proxy.rlwy.net:30608/railway?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=EEg56g6cd46FhgEBAeC2aD22e-5ABFdd 

spring.datasource.url=jdbc:mysql://go-api-haole53492-7ed6.a.aivencloud.com:19357/defaultdb?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username=avnadmin
spring.datasource.password=AVNS_3mBRm55FwMGYt8C9cFQ


#spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jackson.serialization.fail-on-empty-beans=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.main.allow-circular-references=true

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
## File Storage Properties
# Please change this to the path where you want the uploaded files to be stored.
file.upload-dir=./uploads

springdoc.swagger-ui.path=/swagger-ui-custom.html
springdoc.swagger-ui.operationsSorter=method

firebase.bucket-name=balmy-cirrus-409211.appspot.com
firebase.image-url=https://storage.googleapis.com/${firebase.bucket-name}/%s